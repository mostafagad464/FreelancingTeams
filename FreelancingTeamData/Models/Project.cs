// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace FreelancingTeamData.Models
{
    [Table("Project")]
    public partial class Project
    {
        public Project()
        {
            Deals = new HashSet<Deal>();
            ProjectPayments = new HashSet<ProjectPayment>();
            Proposals = new HashSet<Proposal>();
            Reviews = new HashSet<Review>();
            TeamTransactions = new HashSet<TeamTransaction>();
            Skills = new HashSet<Skill>();
        }

        [Key]
        public int Id { get; set; }
        [Column(TypeName = "date")]
        public DateTime PostingDate { get; set; }
        [Required]
        [StringLength(50)]
        public string Title { get; set; }
        public string Description { get; set; }
        public int? Duration { get; set; }
        [Required]
        [StringLength(10)]
        [Unicode(false)]
        public string State { get; set; }
        [Column(TypeName = "money")]
        public decimal MinBudget { get; set; }
        [Column(TypeName = "money")]
        public decimal MaxBudget { get; set; }
        public double? AVGBid { get; set; }
        public int ClientId { get; set; }

        [ForeignKey("ClientId")]
        [InverseProperty("Projects")]
        public virtual Client Client { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<Deal> Deals { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<ProjectPayment> ProjectPayments { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<Proposal> Proposals { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<Review> Reviews { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<TeamTransaction> TeamTransactions { get; set; }

        [ForeignKey("ProjectId")]
        [InverseProperty("Projects")]
        public virtual ICollection<Skill> Skills { get; set; }
    }
}